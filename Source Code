local GameId = game.GameId
local ArsenalID = 111958650
local Injected = false

if GameId == ArsenalID then
    Injected = true

    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local RunService = game:GetService("RunService")
    local UserInputService = game:GetService("UserInputService")

    local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/AlwaysAdvancing/Advancer-Z-V2/refs/heads/main/UI%20Library", true))()

    local Window = Rayfield:CreateWindow({
        Name = "Welcome " .. LocalPlayer.Name .. " | To ðŸ”« Advancer Z v2",
        Icon = 1,
        LoadingTitle = "Advancer Z Load",
        LoadingSubtitle = "by Ocean_Water on Discord",
        ConfigurationSaving = {
            Enabled = true,
            FolderName = "AdvancerZ_V2 (Arsenal)",
            FileName = "Save"
        },
        KeySystem = false,
    })

    local Tab = Window:CreateTab("MainðŸ”«", 4483362458)
    local GunSection = Tab:CreateSection("Toggle Features")

    -- Generic Toggle Creation Function
    local function createToggle(name, defaultValue, callbackFunction)
        return Tab:CreateToggle({
            Name = name,
            CurrentValue = defaultValue,
            Callback = callbackFunction
        })
    end

    -- Infinite Ammo Toggle
    local infiniteAmmoEnabled = false
    local infiniteAmmoThread = nil

    createToggle("Infinite Ammo", false, function(Value)
        infiniteAmmoEnabled = Value
        if Value then
            infiniteAmmoThread = task.spawn(function()
                while infiniteAmmoEnabled do
                    local localVars = LocalPlayer.PlayerGui.GUI.Client.Variables
                    localVars.ammocount.Value = 999
                    localVars.ammocount2.Value = 999
                    task.wait()  -- Using task.wait for performance
                end
            end)
        else
            if infiniteAmmoThread then task.cancel(infiniteAmmoThread) end
        end
    end)

    -- No Recoil Toggle
    local noRecoilEnabled = false
    local noRecoilThread = nil
    createToggle("No Recoil", false, function(Value)
        noRecoilEnabled = Value
        if Value then
            noRecoilThread = task.spawn(function()
                while noRecoilEnabled do
                    for _, v in pairs(game.ReplicatedStorage.Weapons:GetDescendants()) do
                        if v.Name == "RecoilControl" or v.Name == "MaxSpread" then
                            v.Value = 0
                        end
                    end
                    task.wait(5)
                end
            end)
        else
            if noRecoilThread then task.cancel(noRecoilThread) end
        end
    end)

    -- Fire Rate Toggle
    local fireRateEnabled = false
    local fireRateThread = nil
    createToggle("Firerate Mod", false, function(Value)
        fireRateEnabled = Value
        if Value then
            fireRateThread = task.spawn(function()
                while fireRateEnabled do
                    for _, v in pairs(game.ReplicatedStorage.Weapons:GetDescendants()) do
                        if v.Name == "Auto" then
                            v.Value = true
                        elseif v.Name == "FireRate" then
                            v.Value = 0.02
                        end
                    end
                    task.wait(5)
                end
            end)
        else
            if fireRateThread then task.cancel(fireRateThread) end
        end
    end)

    -- Rainbow Gun Toggle
    local rainbowConnection = nil
    createToggle("Rainbow Gun (Crazy mode)", false, function(Value)
        local c = 1
        if Value then
            rainbowConnection = RunService.RenderStepped:Connect(function()
                if game.Workspace.Camera:FindFirstChild('Arms') then
                    for _, v in pairs(game.Workspace.Camera.Arms:GetDescendants()) do
                        if v:IsA('MeshPart') then
                            v.Color = Color3.fromHSV(c, 1, 1)
                            c = c + 0.001
                        end
                    end
                end
            end)
        else
            if rainbowConnection then
                rainbowConnection:Disconnect()
                rainbowConnection = nil
            end
            -- Reset color to white
            if game.Workspace.Camera:FindFirstChild('Arms') then
                for _, v in pairs(game.Workspace.Camera.Arms:GetDescendants()) do
                    if v:IsA('MeshPart') then 
                        v.Color = Color3.new(1, 1, 1)
                    end
                end
            end
        end
    end)

    local AimTab = Window:CreateTab("Aim", 4483362458)
    local aimBotEnabled = false
    local targetPartOption = "Head"
    local fovEnabled = false
    local fovCircle = Drawing.new("Circle")
    local sensitivity = 100
    local teamCheckEnabled = false

    fovCircle.Color = Color3.new(0.5, 0.5, 0.5)
    fovCircle.Thickness = 2
    fovCircle.Transparency = 1
    fovCircle.Visible = false
    fovCircle.Radius = 50

    -- Aimbot Functionality
    local function getClosestPlayer()
        local closestPlayer = nil
        local shortestDistance = math.huge
        local screenCenter = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(targetPartOption) then
                local part = player.Character[targetPartOption]
                local screenPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
                if onScreen then
                    local distance = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude
                    if (not fovEnabled or distance <= fovCircle.Radius) and distance < shortestDistance then
                        closestPlayer = player
                        shortestDistance = distance
                    end
                end
            end
        end

        return closestPlayer
    end

    local function aimAtTarget()
        local target = getClosestPlayer()
        if target and target.Character then
            local part = target.Character:FindFirstChild(targetPartOption)
            if part then
                local newCF = CFrame.new(workspace.CurrentCamera.CFrame.Position, part.Position)
                workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(newCF, sensitivity / 100)
            end
        end
    end

    local function handleInput(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.Keyboard then
            if input.KeyCode == Enum.KeyCode.Q then
                aimAtTarget()
            end
        end
    end

    UserInputService.InputBegan:Connect(handleInput)

    RunService.RenderStepped:Connect(function()
        fovCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
        if aimBotEnabled then
            aimAtTarget()
        end
    end)

    -- UI Elements for Aimbot
    createToggle("Aimbot", false, function(Value)
        aimBotEnabled = Value
    end)

    createToggle("FOV Visibility", false, function(Value)
        fovEnabled = Value
        fovCircle.Visible = fovEnabled
    end)

    -- FOV Size Slider
    Tab:CreateSlider({
        Name = "FOV Size",
        Range = {10, 360},
        Increment = 5,
        CurrentValue = fovCircle.Radius,
        Callback = function(Value)
            fovCircle.Radius = Value
        end,
    })

    -- Target Part Dropdown
    Tab:CreateDropdown({
        Name = "Target Part",
        Options = {"Head", "Torso", "HumanoidRootPart"},
        CurrentOption = targetPartOption,
        Callback = function(Options)
            targetPartOption = Options[1]
        end,
    })

    -- Sensitivity Slider
    Tab:CreateSlider({
        Name = "Sensitivity",
        Range = {0, 100},
        Increment = 1,
        CurrentValue = sensitivity,
        Callback = function(Value)
            sensitivity = Value
        end,
    })

    -- Settings Section
    local SettingTab = Window:CreateTab("Settings", "settings")
    SettingTab:CreateButton({
        Name = "Close Advancer Z Entirely",
        Callback = function()
            Rayfield:Destroy()
        end,
    })

    -- Visuals Tab
    local VisualSection = Tab:CreateSection("Visuals")
    -- Implement ESP functionality here.
    
    -- Ensure to test this script and further optimize parts as needed based on your requirements or environment.

end
